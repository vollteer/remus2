using Microsoft.EntityFrameworkCore;

namespace TicketApi.Shared.Models;

public partial class RemusContext : DbContext
{
    public RemusContext()
    {
    }

    public RemusContext(DbContextOptions<RemusContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<ApiKeys> ApiKeys { get; set; }

    public virtual DbSet<Arbeitslogbuch> Arbeitslogbuches { get; set; }

    public virtual DbSet<Berechtigung> Berechtigungs { get; set; }

    public virtual DbSet<User> RemusUserbsts { get; set; }
    public virtual DbSet<SonstigeTermine> Appointments { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<SonstigeTermine>(entity =>

        {
            entity
                .HasNoKey()
                .ToTable("SonstigeTermine");

            entity.Property(e => e.Ansprechpartner)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ansprechpartner");
            entity.Property(e => e.BearbeiterName)
                .HasMaxLength(255)
                .HasColumnName("bearbeiter_name");
            entity.Property(e => e.BearbeiterUserid)
                .HasMaxLength(10)
                .HasColumnName("bearbeiter_userid");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Kurztext)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("kurztext");
            entity.Property(e => e.Langtext)
                .HasColumnType("ntext")
                .HasColumnName("langtext");
            entity.Property(e => e.Termin)
                .HasColumnType("datetime")
                .HasColumnName("termin");
            entity.Property(e => e.Typ)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("typ");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_ANFO_1");

            entity.ToTable("ANFO");

            entity.HasIndex(e => new { e.AnfoNr, e.FachReferenzZuAnfoNr }, "AnfoNummerRefnummer");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AbnAbnahmeAuftraggeberAnmerkung)
                .HasMaxLength(512)
                .HasColumnName("ABN_AbnahmeAuftraggeberAnmerkung");
            entity.Property(e => e.AbnAbnahmeAuftraggeberSchulungCheckJa).HasColumnName("ABN_AbnahmeAuftraggeberSchulungCheckJa");
            entity.Property(e => e.AbnAbnahmeAuftraggeberSchulungUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_AbnahmeAuftraggeberSchulungUnterschrift");
            entity.Property(e => e.AbnAbnahmeAuftraggeberUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_AbnahmeAuftraggeberUnterschrift");
            entity.Property(e => e.AbnAbnahmeAwsbcodeReviewAnmerkung).HasColumnName("ABN_AbnahmeAWSBCodeReviewAnmerkung");
            entity.Property(e => e.AbnAbnahmeAwsbcodeReviewCheckJa).HasColumnName("ABN_AbnahmeAWSBCodeReviewCheckJa");
            entity.Property(e => e.AbnAbnahmeAwsbcodeReviewUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_AbnahmeAWSBCodeReviewUnterschrift");
            entity.Property(e => e.AbnAbnahmeAwsbetreuerAnmerkung)
                .HasMaxLength(512)
                .HasColumnName("ABN_AbnahmeAWSBetreuerAnmerkung");
            entity.Property(e => e.AbnAbnahmeAwsbetreuerUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_AbnahmeAWSBetreuerUnterschrift");
            entity.Property(e => e.AbnAbnahmeVersionedanmerkung)
                .HasMaxLength(512)
                .HasColumnName("ABN_AbnahmeVERSIONEDAnmerkung");
            entity.Property(e => e.AbnAbnahmeVersionedunterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_AbnahmeVERSIONEDUnterschrift");
            entity.Property(e => e.AbnAbnahmeauftraggebercheckja).HasColumnName("ABN_ABNAHMEAUFTRAGGEBERCHECKJA");
            entity.Property(e => e.AbnAbnahmeawsbetreuercheckja).HasColumnName("ABN_ABNAHMEAWSBETREUERCHECKJA");
            entity.Property(e => e.AbnAbnahmeversioniertcheckja).HasColumnName("ABN_ABNAHMEVERSIONIERTCHECKJA");
            entity.Property(e => e.AbnActivateAbnahme).HasColumnName("ABN_ACTIVATE_ABNAHME");
            entity.Property(e => e.AbnEigenEntwicklung).HasColumnName("ABN_EigenEntwicklung");
            entity.Property(e => e.AbnExtRefVollstaendig).HasColumnName("ABN_EXT_REF_VOLLSTAENDIG");
            entity.Property(e => e.AbnKeineExtRefErforderlich).HasColumnName("ABN_KeineExtRefErforderlich");
            entity.Property(e => e.AbnNeuEntwicklung).HasColumnName("ABN_NeuEntwicklung");
            entity.Property(e => e.AbnTestAuftraggeberAnmerkung)
                .HasMaxLength(512)
                .HasColumnName("ABN_TestAuftraggeberAnmerkung");
            entity.Property(e => e.AbnTestAufwand)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("ABN_TestAufwand");
            entity.Property(e => e.AbnTestAwsbetreuerAnmerkung)
                .HasMaxLength(512)
                .HasColumnName("ABN_TestAWSBetreuerAnmerkung");
            entity.Property(e => e.AbnTestProtokollAuftraggeberUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_TestProtokollAuftraggeberUnterschrift");
            entity.Property(e => e.AbnTestProtokollAwsbetreuerUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_TestProtokollAWSBetreuerUnterschrift");
            entity.Property(e => e.AbnTestRegelAnmerkung)
                .HasMaxLength(512)
                .HasColumnName("ABN_TestRegelAnmerkung");
            entity.Property(e => e.AbnTestRegelNummer).HasColumnName("ABN_TestRegelNummer");
            entity.Property(e => e.AbnTestprotokollAuftraggeberCheckJa).HasColumnName("ABN_TestprotokollAuftraggeberCheckJA");
            entity.Property(e => e.AbnTestprotokollAwsbetreuerCheckJa).HasColumnName("ABN_TestprotokollAWSBetreuerCheckJA");
            entity.Property(e => e.AbnTestprotokollregelcheckja).HasColumnName("ABN_TESTPROTOKOLLREGELCHECKJA");
            entity.Property(e => e.AbnTestprotokollvorhandenUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("ABN_TESTPROTOKOLLVorhandenUnterschrift");
            entity.Property(e => e.AbnUmfangDerFunktionalenAenderung).HasColumnName("ABN_UmfangDerFunktionalenAenderung");
            entity.Property(e => e.Abnahmetermin).HasColumnType("datetime");
            entity.Property(e => e.Aekos)
                .HasMaxLength(1000)
                .HasColumnName("AEKOS");
            entity.Property(e => e.AnfoNr).HasColumnName("ANFO_NR");
            entity.Property(e => e.Anfoart)
                .HasMaxLength(50)
                .HasColumnName("ANFOART");
            entity.Property(e => e.Anfocode)
                .HasMaxLength(255)
                .HasColumnName("ANFOCODE");
            entity.Property(e => e.Anfotyp)
                .HasMaxLength(50)
                .HasColumnName("ANFOTYP");
            entity.Property(e => e.Anfovorgehensart)
                .HasMaxLength(50)
                .HasColumnName("ANFOVORGEHENSART");
            entity.Property(e => e.AufwandIst)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("AUFWAND_IST");
            entity.Property(e => e.AufwandPlan)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("AUFWAND_PLAN");
            entity.Property(e => e.AufwandSchaetzungFb)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("AUFWAND_SCHAETZUNG_FB");
            entity.Property(e => e.Ausgangssituation).HasColumnName("AUSGANGSSITUATION");
            entity.Property(e => e.BearbeiterDoe)
                .HasMaxLength(10)
                .HasColumnName("BEARBEITER_DOE");
            entity.Property(e => e.BearbeiterErinnerdatum)
                .HasColumnType("datetime")
                .HasColumnName("BEARBEITER_ERINNERDATUM");
            entity.Property(e => e.BearbeiterErledigungsdatum)
                .HasColumnType("datetime")
                .HasColumnName("BEARBEITER_ERLEDIGUNGSDATUM");
            entity.Property(e => e.BearbeiterName)
                .HasMaxLength(255)
                .HasColumnName("BEARBEITER_NAME");
            entity.Property(e => e.BearbeiterUserid)
                .HasMaxLength(10)
                .HasColumnName("BEARBEITER_USERID");
            entity.Property(e => e.BearbeiterZugewiesenAm)
                .HasColumnType("datetime")
                .HasColumnName("BEARBEITER_ZUGEWIESEN_AM");
            entity.Property(e => e.Beendet).HasColumnName("BEENDET");
            entity.Property(e => e.BeendetAm)
                .HasColumnType("datetime")
                .HasColumnName("BEENDET_AM");
            entity.Property(e => e.Bezeichnung)
                .HasMaxLength(255)
                .HasColumnName("BEZEICHNUNG");
            entity.Property(e => e.CheckAuswirkungsanalyse).HasColumnName("CHECK_AUSWIRKUNGSANALYSE");
            entity.Property(e => e.CheckAuswirkungsanalyseBegruendung)
                .HasMaxLength(512)
                .HasColumnName("Check_Auswirkungsanalyse_Begruendung");
            entity.Property(e => e.CheckCodereviewErforderlich).HasColumnName("CHECK_CODEREVIEW_ERFORDERLICH");
            entity.Property(e => e.CheckDatenschutzFolgeabschaetzung).HasColumnName("CHECK_DATENSCHUTZ_FOLGEABSCHAETZUNG");
            entity.Property(e => e.CheckDatenschutzFolgeabschaetzungPrueferName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_DATENSCHUTZ_FOLGEABSCHAETZUNG_PRUEFER_NAME");
            entity.Property(e => e.CheckFreigabeUmsetzung).HasColumnName("CHECK_FREIGABE_UMSETZUNG");
            entity.Property(e => e.CheckFreigabeUmsetzungUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("CHECK_FREIGABE_UMSETZUNG_Unterschrift");
            entity.Property(e => e.CheckIsmSaErforderlich).HasColumnName("CHECK_ISM_SA_ERFORDERLICH");
            entity.Property(e => e.CheckIsmSaErgebnis)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ISM_SA_ERGEBNIS");
            entity.Property(e => e.CheckIsmSaPrueferName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ISM_SA_PRUEFER_NAME");
            entity.Property(e => e.CheckItgov).HasColumnName("CHECK_ITGOV");
            entity.Property(e => e.CheckItgovErgebnis)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITGOV_ERGEBNIS");
            entity.Property(e => e.CheckItgovName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITGOV_NAME");
            entity.Property(e => e.CheckItstratCheckErf).HasColumnName("CHECK_ITSTRAT_CHECK_ERF");
            entity.Property(e => e.CheckItstratErgebnis)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITSTRAT_ERGEBNIS");
            entity.Property(e => e.CheckItstratMgmt).HasColumnName("CHECK_ITSTRAT_MGMT");
            entity.Property(e => e.CheckItstratMgmtErgebnis)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITSTRAT_MGMT_ERGEBNIS");
            entity.Property(e => e.CheckItstratMgmtName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITSTRAT_MGMT_NAME");
            entity.Property(e => e.CheckItstratNeueSst).HasColumnName("CHECK_ITSTRAT_NEUE_SST");
            entity.Property(e => e.CheckItstratNeueWerkzeuge).HasColumnName("CHECK_ITSTRAT_NEUE_WERKZEUGE");
            entity.Property(e => e.CheckItstratNeuesAws).HasColumnName("CHECK_ITSTRAT_NEUES_AWS");
            entity.Property(e => e.CheckItstratPrueferName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITSTRAT_PRUEFER_NAME");
            entity.Property(e => e.CheckNachGoBderforderlich).HasColumnName("CHECK_NachGoBDErforderlich");
            entity.Property(e => e.CheckPersonenbezogeneDaten).HasColumnName("CHECK_PERSONENBEZOGENE_DATEN");
            entity.Property(e => e.CheckPersonenbezogeneDatenPrueferName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_PERSONENBEZOGENE_DATEN_PRUEFER_NAME");
            entity.Property(e => e.CheckSchutzbedarf).HasColumnName("CHECK_SCHUTZBEDARF");
            entity.Property(e => e.CheckStratRlvzGeschstrategie).HasColumnName("CHECK_STRAT_RLVZ_GESCHSTRATEGIE");
            entity.Property(e => e.CheckStratRlvzGrossprojekt).HasColumnName("CHECK_STRAT_RLVZ_GROSSPROJEKT");
            entity.Property(e => e.CheckStratRlvzNormregelungen).HasColumnName("CHECK_STRAT_RLVZ_NORMREGELUNGEN");
            entity.Property(e => e.CheckTomcheckliste).HasColumnName("CHECK_TOMCHECKLISTE");
            entity.Property(e => e.CheckTomchecklistePrueferName)
                .HasMaxLength(255)
                .HasColumnName("CHECK_TOMCHECKLISTE_PRUEFER_NAME");
            entity.Property(e => e.CodeFreeze)
                .HasColumnType("datetime")
                .HasColumnName("Code_Freeze");
            entity.Property(e => e.ErstellerDatum)
                .HasColumnType("datetime")
                .HasColumnName("ERSTELLER_DATUM");
            entity.Property(e => e.ErstellerDoe)
                .HasMaxLength(10)
                .HasColumnName("ERSTELLER_DOE");
            entity.Property(e => e.ErstellerName)
                .HasMaxLength(255)
                .HasColumnName("ERSTELLER_NAME");
            entity.Property(e => e.ErstellerUserid)
                .HasMaxLength(10)
                .HasColumnName("ERSTELLER_USERID");
            entity.Property(e => e.ExterneReferenzen).HasColumnName("EXTERNE_REFERENZEN");
            entity.Property(e => e.FachReferenzZuAnfoNr).HasColumnName("FACH_REFERENZ_ZU_ANFO_NR");
            entity.Property(e => e.FbEndtermin)
                .HasColumnType("datetime")
                .HasColumnName("FB_ENDTERMIN");
            entity.Property(e => e.FbStarttermin)
                .HasColumnType("datetime")
                .HasColumnName("FB_STARTTERMIN");
            entity.Property(e => e.FbTesttermin)
                .HasColumnType("datetime")
                .HasColumnName("FB_TESTTERMIN");
            entity.Property(e => e.ItEndtermin)
                .HasColumnType("datetime")
                .HasColumnName("IT_ENDTERMIN");
            entity.Property(e => e.ItStarttermin)
                .HasColumnType("datetime")
                .HasColumnName("IT_STARTTERMIN");
            entity.Property(e => e.ItTesttermin)
                .HasColumnType("datetime")
                .HasColumnName("IT_TESTTERMIN");
            entity.Property(e => e.LaPtFbExt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_PT_FB_EXT");
            entity.Property(e => e.LaPtFbInt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_PT_FB_INT");
            entity.Property(e => e.LaPtItExt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_PT_IT_EXT");
            entity.Property(e => e.LaPtItInt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_PT_IT_INT");
            entity.Property(e => e.LaSumAfa)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_AFA");
            entity.Property(e => e.LaSumEdvK)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_EDV_K");
            entity.Property(e => e.LaSumFbExt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_FB_EXT");
            entity.Property(e => e.LaSumFbInt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_FB_INT");
            entity.Property(e => e.LaSumFbSk)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_FB_SK");
            entity.Property(e => e.LaSumItExt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_IT_EXT");
            entity.Property(e => e.LaSumItInt)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_IT_INT");
            entity.Property(e => e.LaSumSonst)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LA_SUM_SONST");
            entity.Property(e => e.LetzteBemerkung).HasColumnName("LETZTE_BEMERKUNG");
            entity.Property(e => e.LockBearbeiterName)
                .HasMaxLength(255)
                .HasColumnName("LOCK_BEARBEITER_NAME");
            entity.Property(e => e.LockBearbeiterUserid)
                .HasMaxLength(10)
                .HasColumnName("LOCK_BEARBEITER_USERID");
            entity.Property(e => e.LockTime)
                .HasColumnType("datetime")
                .HasColumnName("LOCK_TIME");
            entity.Property(e => e.Nutzen)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("NUTZEN");
            entity.Property(e => e.Prio)
                .HasMaxLength(2)
                .HasColumnName("PRIO");
            entity.Property(e => e.PrioAnfokategorie)
                .HasMaxLength(15)
                .HasColumnName("PRIO_ANFOKATEGORIE");
            entity.Property(e => e.PrioAnfokategorieSonstiges)
                .HasMaxLength(50)
                .HasColumnName("PRIO_ANFOKATEGORIE_SONSTIGES");
            entity.Property(e => e.ProdIncidentTicketbeiFehler)
                .HasMaxLength(20)
                .HasColumnName("PROD_IncidentTicketbeiFehler");
            entity.Property(e => e.ProdProduktivsetzungerfolgreich).HasColumnName("PROD_Produktivsetzungerfolgreich");
            entity.Property(e => e.ProdProduktivsetzungerfolgreichUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("PROD_Produktivsetzungerfolgreich_Unterschrift");
            entity.Property(e => e.ProdReleaseDokuUnvollstaendigBegruendung)
                .HasMaxLength(300)
                .HasColumnName("PROD_ReleaseDokuUnvollstaendig_Begruendung");
            entity.Property(e => e.ProdReleaseDokuVollstaendig).HasColumnName("PROD_ReleaseDokuVollstaendig");
            entity.Property(e => e.ProdReleaseDokuVollstaendigUnterschrift)
                .HasMaxLength(300)
                .HasColumnName("PROD_ReleaseDokuVollstaendig_Unterschrift");
            entity.Property(e => e.Reaobj)
                .HasMaxLength(255)
                .HasColumnName("REAOBJ");
            entity.Property(e => e.ReaobjId).HasColumnName("REAOBJ_ID");
            entity.Property(e => e.ReaobjKuerzel)
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("REAOBJ_KUERZEL");
            entity.Property(e => e.Release)
                .HasMaxLength(255)
                .HasColumnName("RELEASE");
            entity.Property(e => e.ReleaseReferenzZuAnfoNr).HasColumnName("RELEASE_REFERENZ_ZU_ANFO_NR");
            entity.Property(e => e.ReleaseStart)
                .HasColumnType("datetime")
                .HasColumnName("RELEASE_START");
            entity.Property(e => e.ScopeFreeze)
                .HasColumnType("datetime")
                .HasColumnName("Scope_Freeze");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.Vorhaben)
                .HasMaxLength(255)
                .HasColumnName("VORHABEN");
            entity.Property(e => e.VorhabenNr)
                .HasMaxLength(50)
                .HasColumnName("VORHABEN_NR");
            entity.Property(e => e.Zielbeschreibung).HasColumnName("ZIELBESCHREIBUNG");
            entity.Property(e => e.ZustAgDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_AG_DOE");
            entity.Property(e => e.ZustAgName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_AG_NAME");
            entity.Property(e => e.ZustAgUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_AG_USERID");
            entity.Property(e => e.ZustAmDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_AM_DOE");
            entity.Property(e => e.ZustAmName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_AM_NAME");
            entity.Property(e => e.ZustAmUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_AM_USERID");
            entity.Property(e => e.ZustBvName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_BV_NAME");
            entity.Property(e => e.ZustBvUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_BV_USERID");
            entity.Property(e => e.ZustFabDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_FAB_DOE");
            entity.Property(e => e.ZustFabName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_FAB_NAME");
            entity.Property(e => e.ZustFabUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_FAB_USERID");
            entity.Property(e => e.ZustFachlVerantwDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_FACHL_VERANTW_DOE");
            entity.Property(e => e.ZustFachlVerantwName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_FACHL_VERANTW_NAME");
            entity.Property(e => e.ZustFachlVerantwUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_FACHL_VERANTW_USERID");
            entity.Property(e => e.ZustFbitkoDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_FBITKO_DOE");
            entity.Property(e => e.ZustFbitkoName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_FBITKO_NAME");
            entity.Property(e => e.ZustFbitkoUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_FBITKO_USERID");
            entity.Property(e => e.ZustItsvDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_ITSV_DOE");
            entity.Property(e => e.ZustItsvName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_ITSV_NAME");
            entity.Property(e => e.ZustItsvUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_ITSV_USERID");
            entity.Property(e => e.ZustRmDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_RM_DOE");
            entity.Property(e => e.ZustRmName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_RM_NAME");
            entity.Property(e => e.ZustRmUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_RM_USERID");
            entity.Property(e => e.ZustSdDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_SD_DOE");
            entity.Property(e => e.ZustSdName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_SD_NAME");
            entity.Property(e => e.ZustSdUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_SD_USERID");
            entity.Property(e => e.ZustSmDoe)
                .HasMaxLength(10)
                .HasColumnName("ZUST_SM_DOE");
            entity.Property(e => e.ZustSmName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_SM_NAME");
            entity.Property(e => e.ZustSmUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_SM_USERID");
            entity.Property(e => e.ZustTmName)
                .HasMaxLength(255)
                .HasColumnName("ZUST_TM_NAME");
            entity.Property(e => e.ZustTmUserid)
                .HasMaxLength(10)
                .HasColumnName("ZUST_TM_USERID");
        });

        modelBuilder.Entity<ApiKeys>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__API_KEYS__1788CC4C0EA59647");

            entity.ToTable("API_KEYS");

            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ApiKey)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ApiKey");
            entity.Property(e => e.CeationDate).HasColumnType("datetime");
            entity.Property(e => e.Permissions)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Prefix)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Arbeitslogbuch>(entity =>
        {
            entity.ToTable("ARBEITSLOGBUCH");

            entity.HasIndex(e => e.IdAnfo, "IX_ARBEITSLOGBUCH_ID_ANFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Aenderung)
                .HasColumnType("text")
                .HasColumnName("AENDERUNG");
            entity.Property(e => e.BearbeiterName)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("BEARBEITER_NAME");
            entity.Property(e => e.BearbeiterUserid)
                .HasMaxLength(10)
                .HasColumnName("BEARBEITER_USERID");
            entity.Property(e => e.Bemerkung)
                .HasColumnType("text")
                .HasColumnName("BEMERKUNG");
            entity.Property(e => e.Datum)
                .HasColumnType("datetime")
                .HasColumnName("DATUM");
            entity.Property(e => e.IdAnfo).HasColumnName("ID_ANFO");
            entity.Property(e => e.Schrittname)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("SCHRITTNAME");
        });

        modelBuilder.Entity<Berechtigung>(entity =>
        {
            entity
                .HasKey(e => e.Id);
            entity.ToTable("BERECHTIGUNG");

            entity.Property(e => e.Darfdoe)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("DARFDOE");
            entity.Property(e => e.Darfdoename)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DARFDOENAME");
            entity.Property(e => e.Doe)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("DOE");
            entity.Property(e => e.Doename)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DOENAME");
            entity.Property(e => e.Fuehrend).HasColumnName("FUEHREND");
            entity.Property(e => e.Gruppenname)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GRUPPENNAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Persname)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PERSNAME");
            entity.Property(e => e.Reaobjid).HasColumnName("REAOBJID");
            entity.Property(e => e.Reaobjname)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REAOBJNAME");
            entity.Property(e => e.Reaobjtyp)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REAOBJTYP");
            entity.Property(e => e.Schreibzugriff).HasColumnName("SCHREIBZUGRIFF");
            entity.Property(e => e.Userid)
                .HasMaxLength(10)
                .HasColumnName("USERID");
            entity.Property(e => e.Vorhabenid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VORHABENID");
            entity.Property(e => e.Vorhabenname)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("VORHABENNAME");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity
                .HasKey(e => e.UserId);
            entity.ToView("REMUS_USERBST");

            entity.Property(e => e.Doe)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("DOE");
            entity.Property(e => e.Email)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.ExternKnz).HasColumnName("Extern_KNZ");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NAME");
            entity.Property(e => e.PersnrLft)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("PERSNR_LFT");
            entity.Property(e => e.UserId)
                .HasMaxLength(78)
                .IsUnicode(false)
                .HasColumnName("User_ID");
        });
    }
}