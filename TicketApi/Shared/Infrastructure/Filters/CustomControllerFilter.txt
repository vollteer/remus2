using System.Reflection;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.ApplicationParts;
using Microsoft.AspNetCore.Mvc.Controllers;
using TicketApi.Shared.Attributes;

namespace TicketApi.Shared.Infrastructure.Filters
{
    public class CustomControllerFilter : IApplicationFeatureProvider<ControllerFeature>
    {
        public void PopulateFeature(IEnumerable<ApplicationPart> parts, ControllerFeature feature)
        {
            // Lade alle Typen aus allen ApplicationParts
            var controllerTypes = parts
                .OfType<AssemblyPart>()
                .SelectMany(part => part.Types);

            // Filtere nur Controller, die das `RegisterControllerAttribute` haben und `ShouldRegister = true` setzen
            var filteredControllers = controllerTypes
                .Where(t =>
                    typeof(ControllerBase).IsAssignableFrom(t) &&
                    t.IsClass &&
                    !t.IsAbstract &&
                    t.GetCustomAttribute<RegisterControllerAttribute>()?.ShouldRegister != false
                );

            foreach (var controller in filteredControllers)
            {
                feature.Controllers.Add(controller.GetTypeInfo());
            }
        }
    }
}