using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;

namespace TicketApi.Features.Authentication.Attributes
{
    [AttributeUsage(AttributeTargets.Method)]
    public class ApplicationApiKeyAttribute : Attribute, IAsyncActionFilter
    {
        public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)
        {
            if (ValidateAppApiKey(context))
            {
                await next();
            }
        }

        public static bool ValidateAppApiKey(ActionExecutingContext context)
        {
            var config = context.HttpContext.RequestServices.GetRequiredService<IConfiguration>();
            var apiKey = context.HttpContext.Request.Headers["x-api-key"].FirstOrDefault();

            var validApiKey = config["ApiKey"];

            if (string.IsNullOrEmpty(apiKey) || apiKey != validApiKey)
            {
                context.Result = new UnauthorizedObjectResult("Invalid application API key");
                return false;
            }
            return true;
        }

        public void OnActionExecuted(ActionExecutedContext context)
        { }
    }
}